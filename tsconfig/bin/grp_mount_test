#!/bin/bash
# Copyright (C) 2014 Ion Torrent Systems, Inc. All Rights Reserved
# To Modify the timeout value, set environment variable tsec on the
# command line, for example: "tsec=120 /usr/sbin/grp_mount_test"
#
set -u
tsec=${tsec-30} # timeout in seconds, defaults to 30

#=============================================================================
# NFS Volume Test
#=============================================================================
function nfs_mount_test()
{
    #--------------------------
    # is it a mountpoint
    #--------------------------
    isremote=false
    mountname=$1

    while [[ "$mountname" != "/" ]] && [[ "$1" != "/" ]]; do
        # is it a mountpoint
        if ! /usr/bin/timelimit -q -t "$tsec" -T 1 mountpoint -q "$mountname"; then
            mountname=$(dirname "$mountname")
        else
            isremote=true
            break
    	fi
	done

    # Restore the mangled mountname variable
    mountname=$1
	if ! $isremote; then
        echo "$mountname is not available">&2
        return 1
    fi

    #--------------------------
    # is it mounted
    #--------------------------
    ismounted=false

    while [[ "$mountname" != "/" ]] && [[ "$1" != "/" ]]; do
        if ! mount|cut -f3- -d" "|grep -q "$mountname\s" 2>/dev/null; then
            mountname=$(dirname "$mountname")
        else
            ismounted=true
            break
        fi
    done

    # Restore the mangled mountname variable
    mountname=$1
	if ! $ismounted; then
        echo "$mountname is not mounted">&2
        return 1
    fi

    #--------------------------
    # can we detect nfs failure?  thinks its mounted, but we get nothing?
    # df will fail on inaccessible nfs mount.  needs a timeout watchdog.
    #--------------------------
    if ! /usr/bin/timelimit -q -t "$tsec" -T 1 df "$mountname" >/dev/null; then
        echo "$mountname is not available, NFS hung?">&2
        return 1
    fi

    #--------------------------
    # can we read/write it
    #--------------------------
    filename=$(mktemp -p "$mountname" "$(hostname).XXXXXXXXXX" -u)
    if ! touch "$filename" 2>/dev/null; then
        echo "$mountname is not writeable">&2
        return 1
    fi

    rm -f "$filename"
    #finally
    return 0
}

mountname=$(/usr/bin/timelimit -q -t "$tsec" -T 1 readlink -f -n "$1")
returncode=$?
if [[ $returncode -gt 128 ]]; then
    echo "$tsec sec timeout reached: readlink -f -n $1">&2
    exit 1
elif [[ $returncode -gt 0 ]]; then
    echo "$1 is not available">&2
    exit 1
else
    nfs_mount_test "$mountname"
fi

exit
