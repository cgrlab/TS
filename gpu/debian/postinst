#!/bin/bash
# Copyright (C) 2011 Ion Torrent Systems, Inc. All Rights Reserved
set -e
#set -x
#echo "postinst $@"
case "$1" in
	configure)
    
        # Create ldconfig file
        echo "/usr/local/cuda/lib64" > /etc/ld.so.conf.d/cuda.conf
        ldconfig
    
    	# Test for X server running
        if ps -ef|grep /usr/bin/X|grep -v grep >/dev/null; then
        	echo
            echo "************************************************"
        	echo
            echo "WARNING:"
            echo "X server is running.  nVidia device drivers will"
            echo "not be installed.  If you want the GPU enabled,"
            echo "shut down the X server and run this package install"
            echo "again.  Otherwise, ignore this warning."
            echo
        	echo "************************************************"
            echo
            exit 0
        fi
        
        # Test for nvidia graphics device
        if ! lspci|grep -i "nvidia"|egrep '(3D controller|VGA compatible controller)';then
        	echo
            echo "************************************************"
        	echo
            echo "WARNING:"
            echo "No compatible nVidia hardware detected."
            echo "nVidia device driver will not be installed."
            echo
        	echo "************************************************"
            echo
            exit 0
        fi
        
        # filter out devices with (rev ff).
        if lspci|grep -i "nvidia"|egrep '(3D controller|VGA compatible controller)'|grep 'rev ff';then
        	echo
            echo "************************************************"
        	echo
            echo "WARNING:"
            echo "nVidia hardware is detected but the device code indicates a hardware problem."
            echo "Try reinstalling the nVidia card and then reinstalling this package."
            echo "Device is:"
            echo `lspci|grep -i "nvidia"|egrep '(3D controller|VGA compatible controller)'`
            echo
        	echo "************************************************"
            echo
            exit 0
        fi
        
        # Extract Device Driver Package
        echo "Extract Device Driver Package"
        rm -rf @ION_INSTALL_PREFIX@/devdriver
        bash @ION_INSTALL_PREFIX@/devdriver_*.run \
            --extract-only \
            --target @ION_INSTALL_PREFIX@/devdriver > /tmp/nvidiadriver_install.log
        
        # Prevent nouveau driver from running
        (modprobe -r nouveau) || true
        echo -e "# generated by nvidia-installer\nblacklist nouveau\noptions nouveau modeset=0" > /etc/modprobe.d/nvidia-installer-disable-nouveau.conf
        
        # Run Device Driver installer
        echo "Install Nvidia Device Driver (see /tmp/nvidiadriver_install.log)"
        cd @ION_INSTALL_PREFIX@/devdriver >/dev/null
        ./nvidia-installer \
            --accept-license \
            --no-questions \
            --ui=none \
            --dkms \
            --run-nvidia-xconfig >> /tmp/nvidiadriver_install.log
        cd - >/dev/null

        # create nvidia device files
        @ION_INSTALL_PREFIX@/create_nvidia_files
        
        # Edit the rc.local file
        sed -i "/create_nvidia_files/d" /etc/rc.local
        sed -i "s:^exit 0:@ION_INSTALL_PREFIX@/create_nvidia_files\nexit 0:" /etc/rc.local
    	if [ -f "/software/datacollect.avx" ]; then
		# remove xorg.conf (installed by CUDA)
		rm -rf /etc/X11/xorg.conf
	
		if [ "Enabled" == "`nvidia-smi -a | sed -e"/Ecc Mode/{x;N;p};d" | sed -e ':a;N;$!ba;s/\n/ /g' | sed -e 's/.*: //'`" ]; then
		    # disable ECC support
		    nvidia-smi -e 0
		fi
	fi

	;;
    
    abort-install|abort-upgrade)
    	rm -rf @ION_INSTALL_PREFIX@/devdriver
        rm -rf /etc/modprobe.d/nvidia-installer-disable-nouveau.conf
        sed -i "/create_nvidia_files/d" /etc/rc.local
        rm -f /etc/ld.so.conf.d/cuda.conf
        ldconfig
    ;;
esac

exit 0
